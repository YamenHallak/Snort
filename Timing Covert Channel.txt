------------------------- TIMING COVERT CHANNEL -----------------------------
On a computer with an IP:
192.168.18.173
We wrote the following code in winpcap:

time_t seconds;
   seconds = time(NULL);
   //printf("Seconds = %ld\n", seconds);

   int code[10] = {1,0,0,1,1,0,0,0,0,1};            
   int j=0;   
   while(j<10)
   {		
	   	seconds = time(NULL);
		printf("Seconds = %ld\n", seconds);		
		printf("Code[%d] = %d\n", j, code[j] );		
		if (code[j] == (seconds % 2))
		{
			pcap_sendpacket(adhandle , packet , 54);//54 Is The Length Of The Packet
			printf("Send\n");			
			j++;
		}		
		Sleep(1000);
   }
   
So that the data is leaked through IP Timing Covert Channel

And on the opposite side of the IP:
192.168.18.130

When running the instruction:
tcpdump port 5000

We note the following output below, so that when the hour is in odd seconds, it means that there are 1, and when the clock is in even seconds, it means that there are 0


02:19:59.745656 IP w7-2.5000 > WIN-OS32J7UJUTG.localdomain.80: Flags [.], ack 0,
 win 64240, length 0
02:20:00.777036 IP w7-2.5000 > WIN-OS32J7UJUTG.localdomain.80: Flags [.], ack 1,
 win 64240, length 0
02:20:02.839291 IP w7-2.5000 > WIN-OS32J7UJUTG.localdomain.80: Flags [.], ack 1,
 win 64240, length 0
02:20:03.840075 IP w7-2.5000 > WIN-OS32J7UJUTG.localdomain.80: Flags [.], ack 1,
 win 64240, length 0
02:20:05.866668 IP w7-2.5000 > WIN-OS32J7UJUTG.localdomain.80: Flags [.], ack 1,
 win 64240, length 0
02:20:06.877823 IP w7-2.5000 > WIN-OS32J7UJUTG.localdomain.80: Flags [.], ack 1,
 win 64240, length 0
02:20:08.876663 IP w7-2.5000 > WIN-OS32J7UJUTG.localdomain.80: Flags [.], ack 1,
 win 64240, length 0
02:20:10.876110 IP w7-2.5000 > WIN-OS32J7UJUTG.localdomain.80: Flags [.], ack 1,
 win 64240, length 0
02:20:12.876174 IP w7-2.5000 > WIN-OS32J7UJUTG.localdomain.80: Flags [.], ack 1,
 win 64240, length 0
02:20:13.877737 IP w7-2.5000 > WIN-OS32J7UJUTG.localdomain.80: Flags [.], ack 1,
 win 64240, length 0
 
So, the number of bits is:
1,0,0,1,1,0,0,0,0,1

Just as it was sent by the sender

By noting the network traffic analysis and through the packet sent from winpcap, the length of the IP header was 20 bytes
Since the sending is done as a single packet, we set the following rule on the Snort system:

alert ip any any -> any any (msg:"Short IP Packet Detected"; dsize:<21;)


Trigger the following alert:
01/25-18:05:44.341664 [**] [1:0:0] "Short IP Packet Detected" [**] [Priority: 0] {TCP} 192.168.18.173:5000 -> 192.168.18.130:80


It is possible to monitor network traffic, and again we tested a packet with window 64240 and length 0
The following rule is defined:

alert ip any any -> any any (msg: "Short Packet Detected"; ip_proto:tcp; window:64240; dsize:0; sid:9988534;)

The following alert is issued:
03/12-10:50:48.782154 [**] [1:9988534:0] "Short Packet Detected" [**] [Priority: 0] {TCP} 192.168.18.173:5000 -> 192.168.18.171:80

That is, channel detection is based on network traffic analysis and is not fixed

The same rule can be defined for Suricata and we have the same result.




